{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","AttachFile","displayName","Date","timestamp","toDate","toUTCString","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.100c2dd8.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDHTZrMA8zwzHPWSJNNHcdpZNDns4ksljI\",\n    authDomain: \"whatsapp-clone-f4e6e.firebaseapp.com\",\n    projectId: \"whatsapp-clone-f4e6e\",\n    storageBucket: \"whatsapp-clone-f4e6e.appspot.com\",\n    messagingSenderId: \"432267366726\",\n    appId: \"1:432267366726:web:a8b223cddf7617856b5547\",\n    measurementId: \"G-D4X1MCRLDJ\"\n  };\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\nconst db=firebaseApp.firestore();\nconst auth=firebase.auth();\nconst provider=new firebase.auth.GoogleAuthProvider();\n\nexport {auth,provider};\nexport default db;","import React,{useEffect,useState} from 'react'\nimport {Avatar} from '@material-ui/core';\nimport './SidebarChat.css'\nimport db from \"./firebase\"\nimport {Link} from 'react-router-dom';\nfunction SidebarChat({id,name,addNewChat}) {\n    const [seed, setSeed] = useState(\"\")\n    const [messages, setMessages] = useState(\"\")\n    useEffect(() => {\n        if(id){\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot((snapshot)=>setMessages(snapshot.docs.map((doc)=>doc.data()))\n            );\n        }\n    }, [id])\n\n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()*5000));\n    },[])\n\n    const createChat=()=>{\n        const roomName= prompt('Pls enter a name for the chat room');\n        if(roomName){   \n            //do some clever stuff here...\n            db.collection('rooms').add({\n                name: roomName\n            })\n        }\n    }\n    return !addNewChat?(\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n            <div className=\"sidebarChat__info\">\n                <h2>{name}</h2>\n                <p>{messages[0]?.message}</p>\n            </div>\n            </div>\n        </Link>\n    ):(\n        <div onClick={createChat} className=\"sidebarChat\">\n            <h2>Add new Chat</h2>\n        </div>\n    )\n}\n\nexport default SidebarChat\n","import React, {createContext, useContext, useReducer} from 'react';\n\nexport const StateContext = createContext();\nexport const StateProvider = ({\n    reducer, initialState, children}) => (\n        <StateContext.Provider value = {useReducer(reducer, initialState)}>\n            {children}\n        </StateContext.Provider>\n    );\n\nexport const useStateValue = () => useContext(StateContext);\n","import React,{useEffect,useState} from \"react\";\nimport \"./Sidebar.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db from \"./firebase\"\nimport {useStateValue} from './StateProvider';\nfunction Sidebar() {\n  const [rooms, setRooms] = useState([]);\n  const [{user},dispatch]=useStateValue();\n\n  useEffect(()=>{\n    const unsubscribe=db.collection('rooms').onSnapshot((snapshot)=>\n      setRooms(snapshot.docs.map((doc)=>({\n        id: doc.id,\n        data: doc.data(),\n      }))\n    ))\n    return ()=>{\n      unsubscribe();\n    };\n  },[]);\n  \n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL}/>\n        <div className=\"sidebar__right\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchOutlined />\n          <input type=\"text\" placeholder=\"Search or start a chat\" />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">\n            \n            <SidebarChat addNewChat/>\n            {\n              rooms.map(room=>(\n                <SidebarChat key={room.id} id={room.id} name={room.data.name}/>   \n              ))\n            }\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React,{useEffect,useState} from 'react'\nimport {AttachFile,MoreVert,SearchOutlined} from '@material-ui/icons';\nimport './Chat.css';\nimport MicIcon from '@material-ui/icons/Mic';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport {Avatar,IconButton} from '@material-ui/core';\nimport {useParams} from \"react-router-dom\";\nimport db from './firebase';\nimport firebase from 'firebase';\nimport {useStateValue} from './StateProvider';\nfunction Chat() {\n    const [input, setInput] = useState(\"\")\n    const [seed, setSeed] = useState(\"\"); \n    const [messages, setMessages] = useState([]);\n    const {roomId}=useParams();\n    const [roomName, setRoomName] = useState(\"\")\n    const [{user},dispatch]=useStateValue();\n    \n    useEffect(()=>{\n        if(roomId){\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot)=>\n                setRoomName(snapshot.data().name));\n            \n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp','asc').onSnapshot((snapshot)=>(\n                setMessages(snapshot.docs.map((doc)=>doc.data()))\n            ));\n        }        \n    },[roomId]);\n\n    const sendMessage=(e)=>{\n        e.preventDefault();\n        console.log('You typed >>>',input);\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n        setInput('');\n    };\n    \n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()*5000));\n    },[roomId]);\n\n    return (\n        <div className=\"chat\">\n            \n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen at ...</p>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined/>\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert/>\n                    </IconButton>\n                \n                </div>\n            </div>\n\n            <div className=\"chat__body\">\n                {messages.map(message=>(\n                    <p className={`chat__message ${message.name===user.displayName && \"chat__reciever\"}`}>\n                    <span className=\"chat__name\">\n                    {message.name}\n                    </span>\n                    {message.message}\n                    <span className=\"chat__timestamp\">\n                    {new Date(message.timestamp?.toDate()).toUTCString()}\n                    </span> \n                    </p>\n                ))}\n            </div>\n\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon/>\n                <form>\n                    <input value={input} onChange={(e)=>setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon/>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","export const initialState = {\n    user: null,\n};\n\nexport const actionTypes ={\n    SET_USER: \"SET_USER\"\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return{\n                ...state,\n                user: action.user,\n            };\n        default:\n            return state;   \n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport './Login.css';\nimport {Button} from '@material-ui/core';\nimport {auth,provider} from './firebase';\nimport {useStateValue} from './StateProvider';\nimport {actionTypes} from './reducer';\nfunction Login() {\n    const [{},dispatch]=useStateValue();\n    const signIn=()=>{\n        auth\n            .signInWithPopup(provider)\n            .then(result=>{\n                dispatch({\n                    type:actionTypes.SET_USER,\n                    user:result.user\n                })\n            })\n            .catch(error=>alert(error.message));\n    };\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/479px-WhatsApp.svg.png\" alt=\"whatsapp app logo\" />\n                <div className=\"login__text\">\n                    <h1>Sign in to whatsapp</h1>\n                </div>\n                <Button type=\"submit\" onClick={signIn}>\n                    Sign In With Google\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default Login\n","import './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Login from './Login';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport React,{useState} from 'react';\nimport {useStateValue} from './StateProvider';\n\nfunction App() {\n\n  const [{user},dispatch]=useStateValue();  \n  return (\n    // bem naming conventions\n    <div className=\"app\">\n    {!user?(<Login/>):\n    (\n      <div className=\"app__body\">\n      <Router>\n      <Sidebar/>\n      <Switch>\n\n      <Route path=\"/rooms/:roomId\">\n      <Chat/>\n      </Route>\n\n      <Route path=\"/\">\n      <Chat/>\n      </Route>\n      \n      </Switch>\n      </Router>\n      </div>\n    )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n        <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}